/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SchemasCompositeDayReportPopulatedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasCompositeDayReportPopulatedResponse{}

// SchemasCompositeDayReportPopulatedResponse struct for SchemasCompositeDayReportPopulatedResponse
type SchemasCompositeDayReportPopulatedResponse struct {
	Comments                []SchemasCommentPopulatedResponse          `json:"comments"`
	CompositionParticipants []SchemasDayReportsCompositionParticipants `json:"compositionParticipants"`
	// Calculated by - just date
	CreatedAt string                            `json:"createdAt"`
	JobsDone  []SchemasJobDonePopulatedResponse `json:"jobsDone"`
	Plans     []SchemasPlanPopulatedResponse    `json:"plans"`
	Problems  []SchemasProblemPopulatedResponse `json:"problems"`
	// Calculated by - just last date
	UpdatedAt string `json:"updatedAt"`
	// Always generated
	Uuid string `json:"uuid"`
}

type _SchemasCompositeDayReportPopulatedResponse SchemasCompositeDayReportPopulatedResponse

// NewSchemasCompositeDayReportPopulatedResponse instantiates a new SchemasCompositeDayReportPopulatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasCompositeDayReportPopulatedResponse(comments []SchemasCommentPopulatedResponse, compositionParticipants []SchemasDayReportsCompositionParticipants, createdAt string, jobsDone []SchemasJobDonePopulatedResponse, plans []SchemasPlanPopulatedResponse, problems []SchemasProblemPopulatedResponse, updatedAt string, uuid string) *SchemasCompositeDayReportPopulatedResponse {
	this := SchemasCompositeDayReportPopulatedResponse{}
	this.Comments = comments
	this.CompositionParticipants = compositionParticipants
	this.CreatedAt = createdAt
	this.JobsDone = jobsDone
	this.Plans = plans
	this.Problems = problems
	this.UpdatedAt = updatedAt
	this.Uuid = uuid
	return &this
}

// NewSchemasCompositeDayReportPopulatedResponseWithDefaults instantiates a new SchemasCompositeDayReportPopulatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasCompositeDayReportPopulatedResponseWithDefaults() *SchemasCompositeDayReportPopulatedResponse {
	this := SchemasCompositeDayReportPopulatedResponse{}
	return &this
}

// GetComments returns the Comments field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetComments() []SchemasCommentPopulatedResponse {
	if o == nil {
		var ret []SchemasCommentPopulatedResponse
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetCommentsOk() ([]SchemasCommentPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetComments(v []SchemasCommentPopulatedResponse) {
	o.Comments = v
}

// GetCompositionParticipants returns the CompositionParticipants field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetCompositionParticipants() []SchemasDayReportsCompositionParticipants {
	if o == nil {
		var ret []SchemasDayReportsCompositionParticipants
		return ret
	}

	return o.CompositionParticipants
}

// GetCompositionParticipantsOk returns a tuple with the CompositionParticipants field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetCompositionParticipantsOk() ([]SchemasDayReportsCompositionParticipants, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompositionParticipants, true
}

// SetCompositionParticipants sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetCompositionParticipants(v []SchemasDayReportsCompositionParticipants) {
	o.CompositionParticipants = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetJobsDone returns the JobsDone field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetJobsDone() []SchemasJobDonePopulatedResponse {
	if o == nil {
		var ret []SchemasJobDonePopulatedResponse
		return ret
	}

	return o.JobsDone
}

// GetJobsDoneOk returns a tuple with the JobsDone field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetJobsDoneOk() ([]SchemasJobDonePopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobsDone, true
}

// SetJobsDone sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetJobsDone(v []SchemasJobDonePopulatedResponse) {
	o.JobsDone = v
}

// GetPlans returns the Plans field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetPlans() []SchemasPlanPopulatedResponse {
	if o == nil {
		var ret []SchemasPlanPopulatedResponse
		return ret
	}

	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetPlansOk() ([]SchemasPlanPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plans, true
}

// SetPlans sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetPlans(v []SchemasPlanPopulatedResponse) {
	o.Plans = v
}

// GetProblems returns the Problems field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetProblems() []SchemasProblemPopulatedResponse {
	if o == nil {
		var ret []SchemasProblemPopulatedResponse
		return ret
	}

	return o.Problems
}

// GetProblemsOk returns a tuple with the Problems field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetProblemsOk() ([]SchemasProblemPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Problems, true
}

// SetProblems sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetProblems(v []SchemasProblemPopulatedResponse) {
	o.Problems = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetUuid returns the Uuid field value
func (o *SchemasCompositeDayReportPopulatedResponse) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SchemasCompositeDayReportPopulatedResponse) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SchemasCompositeDayReportPopulatedResponse) SetUuid(v string) {
	o.Uuid = v
}

func (o SchemasCompositeDayReportPopulatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasCompositeDayReportPopulatedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["comments"] = o.Comments
	toSerialize["compositionParticipants"] = o.CompositionParticipants
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["jobsDone"] = o.JobsDone
	toSerialize["plans"] = o.Plans
	toSerialize["problems"] = o.Problems
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *SchemasCompositeDayReportPopulatedResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"comments",
		"compositionParticipants",
		"createdAt",
		"jobsDone",
		"plans",
		"problems",
		"updatedAt",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasCompositeDayReportPopulatedResponse := _SchemasCompositeDayReportPopulatedResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasCompositeDayReportPopulatedResponse)

	if err != nil {
		return err
	}

	*o = SchemasCompositeDayReportPopulatedResponse(varSchemasCompositeDayReportPopulatedResponse)

	return err
}

type NullableSchemasCompositeDayReportPopulatedResponse struct {
	value *SchemasCompositeDayReportPopulatedResponse
	isSet bool
}

func (v NullableSchemasCompositeDayReportPopulatedResponse) Get() *SchemasCompositeDayReportPopulatedResponse {
	return v.value
}

func (v *NullableSchemasCompositeDayReportPopulatedResponse) Set(val *SchemasCompositeDayReportPopulatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasCompositeDayReportPopulatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasCompositeDayReportPopulatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasCompositeDayReportPopulatedResponse(val *SchemasCompositeDayReportPopulatedResponse) *NullableSchemasCompositeDayReportPopulatedResponse {
	return &NullableSchemasCompositeDayReportPopulatedResponse{value: val, isSet: true}
}

func (v NullableSchemasCompositeDayReportPopulatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasCompositeDayReportPopulatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
