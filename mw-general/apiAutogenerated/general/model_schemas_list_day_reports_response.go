/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SchemasListDayReportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasListDayReportsResponse{}

// SchemasListDayReportsResponse struct for SchemasListDayReportsResponse
type SchemasListDayReportsResponse struct {
	DayReports []SchemasCompositeDayReportPopulatedResponse `json:"dayReports"`
	Size       int32                                        `json:"size"`
}

type _SchemasListDayReportsResponse SchemasListDayReportsResponse

// NewSchemasListDayReportsResponse instantiates a new SchemasListDayReportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasListDayReportsResponse(dayReports []SchemasCompositeDayReportPopulatedResponse, size int32) *SchemasListDayReportsResponse {
	this := SchemasListDayReportsResponse{}
	this.DayReports = dayReports
	this.Size = size
	return &this
}

// NewSchemasListDayReportsResponseWithDefaults instantiates a new SchemasListDayReportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasListDayReportsResponseWithDefaults() *SchemasListDayReportsResponse {
	this := SchemasListDayReportsResponse{}
	return &this
}

// GetDayReports returns the DayReports field value
func (o *SchemasListDayReportsResponse) GetDayReports() []SchemasCompositeDayReportPopulatedResponse {
	if o == nil {
		var ret []SchemasCompositeDayReportPopulatedResponse
		return ret
	}

	return o.DayReports
}

// GetDayReportsOk returns a tuple with the DayReports field value
// and a boolean to check if the value has been set.
func (o *SchemasListDayReportsResponse) GetDayReportsOk() ([]SchemasCompositeDayReportPopulatedResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.DayReports, true
}

// SetDayReports sets field value
func (o *SchemasListDayReportsResponse) SetDayReports(v []SchemasCompositeDayReportPopulatedResponse) {
	o.DayReports = v
}

// GetSize returns the Size field value
func (o *SchemasListDayReportsResponse) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *SchemasListDayReportsResponse) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *SchemasListDayReportsResponse) SetSize(v int32) {
	o.Size = v
}

func (o SchemasListDayReportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasListDayReportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dayReports"] = o.DayReports
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *SchemasListDayReportsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dayReports",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasListDayReportsResponse := _SchemasListDayReportsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasListDayReportsResponse)

	if err != nil {
		return err
	}

	*o = SchemasListDayReportsResponse(varSchemasListDayReportsResponse)

	return err
}

type NullableSchemasListDayReportsResponse struct {
	value *SchemasListDayReportsResponse
	isSet bool
}

func (v NullableSchemasListDayReportsResponse) Get() *SchemasListDayReportsResponse {
	return v.value
}

func (v *NullableSchemasListDayReportsResponse) Set(val *SchemasListDayReportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasListDayReportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasListDayReportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasListDayReportsResponse(val *SchemasListDayReportsResponse) *NullableSchemasListDayReportsResponse {
	return &NullableSchemasListDayReportsResponse{value: val, isSet: true}
}

func (v NullableSchemasListDayReportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasListDayReportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
