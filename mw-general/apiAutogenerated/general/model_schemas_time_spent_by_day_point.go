/*
Masters way general API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SchemasTimeSpentByDayPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemasTimeSpentByDayPoint{}

// SchemasTimeSpentByDayPoint struct for SchemasTimeSpentByDayPoint
type SchemasTimeSpentByDayPoint struct {
	Date  string `json:"date"`
	Value int32  `json:"value"`
}

type _SchemasTimeSpentByDayPoint SchemasTimeSpentByDayPoint

// NewSchemasTimeSpentByDayPoint instantiates a new SchemasTimeSpentByDayPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemasTimeSpentByDayPoint(date string, value int32) *SchemasTimeSpentByDayPoint {
	this := SchemasTimeSpentByDayPoint{}
	this.Date = date
	this.Value = value
	return &this
}

// NewSchemasTimeSpentByDayPointWithDefaults instantiates a new SchemasTimeSpentByDayPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemasTimeSpentByDayPointWithDefaults() *SchemasTimeSpentByDayPoint {
	this := SchemasTimeSpentByDayPoint{}
	return &this
}

// GetDate returns the Date field value
func (o *SchemasTimeSpentByDayPoint) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *SchemasTimeSpentByDayPoint) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *SchemasTimeSpentByDayPoint) SetDate(v string) {
	o.Date = v
}

// GetValue returns the Value field value
func (o *SchemasTimeSpentByDayPoint) GetValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SchemasTimeSpentByDayPoint) GetValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SchemasTimeSpentByDayPoint) SetValue(v int32) {
	o.Value = v
}

func (o SchemasTimeSpentByDayPoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemasTimeSpentByDayPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *SchemasTimeSpentByDayPoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"date",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchemasTimeSpentByDayPoint := _SchemasTimeSpentByDayPoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchemasTimeSpentByDayPoint)

	if err != nil {
		return err
	}

	*o = SchemasTimeSpentByDayPoint(varSchemasTimeSpentByDayPoint)

	return err
}

type NullableSchemasTimeSpentByDayPoint struct {
	value *SchemasTimeSpentByDayPoint
	isSet bool
}

func (v NullableSchemasTimeSpentByDayPoint) Get() *SchemasTimeSpentByDayPoint {
	return v.value
}

func (v *NullableSchemasTimeSpentByDayPoint) Set(val *SchemasTimeSpentByDayPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemasTimeSpentByDayPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemasTimeSpentByDayPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemasTimeSpentByDayPoint(val *SchemasTimeSpentByDayPoint) *NullableSchemasTimeSpentByDayPoint {
	return &NullableSchemasTimeSpentByDayPoint{value: val, isSet: true}
}

func (v NullableSchemasTimeSpentByDayPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemasTimeSpentByDayPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
